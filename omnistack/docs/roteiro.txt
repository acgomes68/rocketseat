Dia 1/5 - Preparação do ambiente
Node LTS
Latest LTS Version: 10.16.3 (includes npm 6.9.0)
http://nodejs.org
usar package manager
adicionar repositório com curl/apt-key da versão LTS
sudo apt-get install -y nodejs
node -v
npm -v

yarn
http://yarnpkg.com
adicionar repositório com curl/apt-key
sudo apt-get update && sudo apt-get install --no-install-recomends yarn
yarn -v

vsCode
extensions:
- Dracula Official
-- Set Theme Dracula (not Soft)
- Material Icon Theme
- Rocketseat
-- ReactJS
-- React Native
fonts:
-- fira code
-- preferences:
--- ctrl+shift+p
--- open settings json 
--- "editor.fontFamily": "Fira Code"
--- "editor.fontLigatures": true


Dia 2/5 - Construção do backend com Node.js e MongoDB
mkdir backend && cd backend 
yarn init -y
yarn add express
node src/server.js
yarn add nodemon -D
yarn dev
https://insomnia.rest

req.query -> acessar query params para filtros (GET).Ex.: http://url?q=2
req.params -> acessar route params para edição e exclusão (PUT, DELETE).Ex.: http://url/2
req.body -> acessar corpo da requisição para edição e inclusão (PUT, POST).Ex.: http://url
req.headers -> 

https://www.mongodb.com/cloud/atlas
- create cloud;
- create user in database access;
- add ip address in network access with any ip address: 0.0.0.0/0;
- copy connection string in clusters/connect/your application;

yarn add mongoose

# Verificar acesso à porta do mongo, se tem proxy
MongoDB port: 27017
http://portquiz.net:27017/

/controllers
    // index, show, store, update, destroy
    model.findOne()
    model.create()
	/SessionController.js (Porque não UserController?)
    /Spot.js
/models
    User.js
    Spot.js
        techs: [String]
        user.type

await e async !important
post multipart (string, number, array, file)
yarn add multer

yarn add dotenv


Dia 3/5 - Contrução do frontend Web Responsivo com ReactJS
cd rocketseat/omnistack
yarn create react-app frontend
color highlight vscode extension

gnome terminal backend: yarn dev
vscode terminal frontend: yarn start

yarn add axios
#### yarn add dotenv
backend: yarn add cors

await booking.populate('user').populate('spot').execPopulate();

import React, { useState } from 'react';
localStorage.setItem('user', _id);

yarn add react-router-dom

model virtual column


dia 4/5 - Contrução do frontend Mobile com React Native
Instalar o App Expo
instalar o expo-cli: npm install -g expo-cli

cd rocketseat/omnistack
expo init mobile
- template: blank;
- App Name: AirCnC;
- Yarn: Yes
OU
expo init mobile --template blank --name AirCnC --yarn
expo init mobile --template blank --name AirCnC --npm
E...
cd mobile

OU
cd rocketseat/omnistack/mobile
expo init .
expo init . --template blank --name AirCnC --yarn
expo init . --template blank --name AirCnC --npm

yarn start

Emuladores:
iOS: xcode (só funciona no OS da Apple)
Android: genymotion for fun
- Android API: >=9.0
- Available templates: Google Pixel 3

Logar no App Expo
Acessar URL exposta: exp://192.168.0.52:19000
Focar o QR Code

cd mobile && code .
yarn add react-navigation
expo install react-native-gesture-handler react-native-reanimated
yarn add axios
MongoDB Compass

yarn add react-native-dotenv --dev
https://www.reactnativeschool.com/easily-manage-different-environment-configurations-in-react-native


dia 5/5 - Funcionalidades avançadas
backend: yarn add socket.io
frontend: yarn add socket.io-client
mobile: yarn add socket.io-client

#omnistacknextlevel

######### Javascript #########
document.querySelector()
document.querySelectorAll()
document.createElement()
document.setAttribute()
document.createTextNode()
element1.appendChild(element2)
element1.removeChild(element2)
element.style.attribute = value
for (element of array)
array.push(value)
array.splice(position, count)
array.indexOf()

localStorage.setItem(id, value)
localStorage.getItem(id)
JSON.stringify(array)
JSON.parse(JSON text)

var id = value || default
